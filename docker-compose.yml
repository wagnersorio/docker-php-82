version: '3.0'

services:

  nginx:
    container_name: docker-nginx
    image: nginx:alpine
    restart: unless-stopped
    ports: 
      - "${NGINX_HTTP_PORT}:80"
    volumes: 
      - ./src:/var/www
      - ./nginx:/etc/nginx/conf.d/
    networks: 
      - docker-network

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: docker-php
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    networks: 
      - docker-network

  # db mysql
  mysql:
    container_name: docker-mysql
    image: mysql:5.7.22
    restart: unless-stopped
    environment: 
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
    volumes: 
        - ./mysql:/var/lib/mysql
    ports: 
      - "${MYSQL_PORT}:3306"
    networks: 
        - docker-network

  redis:
      container_name: docker-redis
      image: 'redis:alpine'
      ports:
          - '${REDIS_PORT:-6379}:6379'
      volumes:
          - './redis:/data'
      networks:
          - docker-network
      healthcheck:
          test: ["CMD", "redis-cli", "ping"]
          retries: 3
          timeout: 5s

  mailhog:
    container_name: docker-mailhog
    image: 'mailhog/mailhog:latest'
    ports:
      - '${MAILHOG_PORT:-1025}:1025'
      - '${MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - docker-network

networks:
  docker-network:
    driver: bridge

